apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redash
  labels:
    app: {{ template "redash.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        io.redash.service: {{ .Release.Name }}-redash
        app: {{ template "redash.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:

      - name: server
        image: redash/redash:latest
        args: ["server"]
        ports:
        - containerPort: 5000
          protocol: TCP
        env:
        - name: REDASH_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: redash-cloudsql-db-credentials
              key: url
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-redash-server-configmap
        - configMapRef:
            name: {{ .Release.Name }}-redash-common-configmap
        livenessProbe: 
          {{- range $key, $val := .Values.livenessProbe }}
          {{ $key }}: {{ $val }}
          {{- end }}
        readinessProbe:
          {{- range $key, $val := .Values.readinessProbe }}
          {{ $key }}: {{ $val }}
          {{- end }}

      - name: worker
        image: redash/redash:latest
        args: ["scheduler"]
        env:
        - name: REDASH_DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: redash-cloudsql-db-credentials
              key: url

        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-redash-worker-configmap
        - configMapRef:
            name: {{ .Release.Name }}-redash-common-configmap

      - name: redis
        image: redis:3.0-alpine
        ports:
        - containerPort: 6379
          protocol: TCP

      {{- if .Values.googleCloudSQL.enabled }}
      - name: cloudsql-proxy
        image: {{ .Values.googleCloudSQL.image }}:{{ .Values.googleCloudSQL.imageTag }}
        command: 
          - /cloud_sql_proxy
          - --dir=/cloudsql
          - -instances={{ .Values.googleCloudSQL.instanceConnectionName }}=tcp:{{ .Values.googleCloudSQL.port }}
          - -credential_file={{ .Values.googleCloudSQL.credentialFilePath }}
        ports:
        - containerPort: 3306
          protocol: TCP
        - containerPort: 5432
          protocol: TCP
        volumeMounts:
        - name: cloudsql-instance-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
        - name: cloudsql
          mountPath: /cloudsql
      {{- else if .Values.postgres.enabled }}
      - name: postgres
        image: {{ .Values.postgres.image }}:{{ .Values.postgres.imageTag }}
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
      {{- end }}

      volumes:
      {{- if .Values.googleCloudSQL.enabled }}
      - name: cloudsql-instance-credentials
        secret:
          secretName: {{ .Values.googleCloudSQL.secretName }}
      - name: cloudsql
        emptyDir: {}
      {{- else if .Values.postgres.enabled }}
      - name: data
        {{- if .Values.ersistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "redash.fullname" .) }}
        {{- else }}
        emptyDir: {}
        {{- end}}
      {{- end }}


